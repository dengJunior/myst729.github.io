(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{78:function(e,r,a){"use strict";a.r(r);var t=a(0),o=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"wai-调查之-aria-界标角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wai-调查之-aria-界标角色","aria-hidden":"true"}},[e._v("#")]),e._v(" WAI 调查之 ARIA 界标角色")]),a("blockquote",[a("p",[e._v("本文翻译自 "),a("a",{attrs:{href:"http://alistapart.com/column/wai-finding-with-aria-landmark-roles",target:"_blank",rel:"noopener noreferrer"}},[e._v("WAI-finding with ARIA Landmark Roles")]),e._v("。原文内容较简单，属于以扫盲为目的的科普文。翻译此文也是希望人们能对可用性有一点大致的实际认知，引起大家对可用性的关注。")])]),a("p",[e._v("最近，我在准备一个面向非专业队的 Web 可用性报告。作为调研的一部分，我向一些人询问了他们在日常的 Web 实践中如何应用 HTML 的 "),a("code",[e._v("role")]),e._v(" 属性。")]),a("p",[e._v("我对他们的回答并不意外。很多人表示完全没注意过，懊恼地承认自己只是复制粘贴。部分人对少数几个常见的角色有点印象，但除此之外，就是未知的深渊。他们的语气大都很内疚。人们并非不关心可用性，而是相比于其他的任务，这个话题往往令人不知所措。")]),a("p",[e._v("我发现针对特定的技术或实践，通过 Google 容易搜到，又易于应用的文档非常匮乏。一方面，我们有非常详尽的规范说明。另一方面，实施的例子却屈指可数。整理出的文档更是寥寥无几。")]),a("p",[e._v("我无法改变世界，但我可以为特定领域贡献一些分析性文档：按照我的理解，对 "),a("abbr",{attrs:{title:"Web Accessibility Initiative"}},[e._v("WAI")]),e._v("-"),a("abbr",{attrs:{title:"Accessible Rich Internet Applications"}},[e._v("ARIA")]),a("strong",[e._v("界标角色")]),e._v("粗浅的看法，这意味着在你的日常工作流程中，可以更方便地增强网站的可用性。")]),a("p",[e._v("W3C "),a("a",{attrs:{href:"http://www.w3.org/WAI/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Web 可用性倡议（WAI）")]),e._v("中的"),a("a",{attrs:{href:"http://www.w3.org/TR/wai-aria/",target:"_blank",rel:"noopener noreferrer"}},[e._v("可用性富互联网应用程序（ARIA）")]),e._v("套件，只是应对 Web 可用性难题的一小部分。好了，使用 ARIA 的第一条规则就是——这可不是恶搞——不使用 ARIA（除非有需要）。在你开始使用它之前，你应该已经有一套扎实的制作工艺：细致、语义化的内容处理；对属性和替换文本的正确使用；对于对比度和字号的敏感。对可用性的支持会带来制作精良的 HTML，反之亦然。")]),a("h2",{attrs:{id:"如何使用-aria"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-aria","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何使用 ARIA")]),a("p",[e._v("应用于 HTML 的 ARIA 有两部分组成：角色和带 "),a("code",[e._v("aria-")]),e._v(" 前缀的属性。角色标识了一个元素的作用，属性描述了与之有关的事物（特性）及其是什么样的（状态）。")]),a("p",[e._v("ARIA 是对 HTML 语义化的补充。它具备比现有的 HTML 元素和属性更完善的表达能力，并让你页面中元素的关系和含义更明确。它还提供一种机制，当作者不管是固执还是必需，使用非标准元素表示其他事物时（如：把 "),a("code",[e._v("div")]),e._v(" 当作 "),a("code",[e._v("button")]),e._v(" 来用），向其附加语义。")]),a("p",[e._v("ARIA 规范为浏览器和解析 HTML 文档的辅助性技术提供了一种可以让人们以多种方式访问和使用 Web 的标准方法。ARIA 包含的内容非常多，而我们也不是一天到晚都用，所以今天我只讲一个重要的话题：界标角色。")]),a("h2",{attrs:{id:"日常使用的界标角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日常使用的界标角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 日常使用的界标角色")]),a("p",[e._v("HTML 元素的 "),a("code",[e._v("role")]),e._v(" 属性只是 ARIA 的冰山一角，是 ARIA 中最容易被 Web 开发者一眼认出来的部分。有些人可能对 "),a("code",[e._v('<div role="main">')]),e._v("（甚至 "),a("code",[e._v('<main role="main">')]),e._v("）已经很熟悉。")]),a("p",[a("code",[e._v("main")]),e._v(" 是 ARIA 定义的八个"),a("a",{attrs:{href:"http://www.w3.org/TR/wai-aria/roles#landmark_roles",target:"_blank",rel:"noopener noreferrer"}},[e._v("界标角色")]),e._v("之一。所有定义的角色都是用来表示一个元素的作用，但界标角色作为重要的里程碑，允许辅助性技术为 HTML 文档结构绘制地图。这就是为什么它们是很适合作为开始的一组角色。对于不同类型的用户，界标角色能使你的页面各个区域之间的导航更高效。它们有助于传达基本的语义意图，还能作为其他技术的钩子和辅助（或者甚至是别人阅读你的源代码）。")]),a("p",[e._v("以下是一些可以实际使用在你所写的每个 HTML 页面中的界标角色：")]),a("ul",[a("li",[a("code",[e._v("main")]),e._v("：文档的主体内容；")]),a("li",[a("code",[e._v("banner")]),e._v("：页面的主要标题或刊头；通常用于 "),a("code",[e._v("header")]),e._v(" 元素；")]),a("li",[a("code",[e._v("navigation")]),e._v("：导航链接的集合。常见的用法为 "),a("code",[e._v('<nav role="navigation">')]),e._v("；")]),a("li",[a("code",[e._v("contentinfo")]),e._v("：元数据、版权信息等内容的集合。常见的用法为 "),a("code",[e._v('<footer role="contentinfo">')]),e._v("。")])]),a("h2",{attrs:{id:"其他界标角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他界标角色","aria-hidden":"true"}},[e._v("#")]),e._v(" 其他界标角色")]),a("p",[e._v("还有两个更直接的界标角色，你可能会感兴趣："),a("code",[e._v("complementary")]),e._v("——支持 "),a("code",[e._v("main")]),e._v(" 但又相对独立的一块内容，以及 "),a("code",[e._v("search")]),e._v("——包含你的网站搜索界面的元素。")]),a("p",[a("code",[e._v("application")]),e._v(" 界标角色要小心使用，如果你想用它就"),a("a",{attrs:{href:"http://a11yproject.com/posts/how-to-use-application-role/",target:"_blank",rel:"noopener noreferrer"}},[e._v("先看看这个")]),e._v("。"),a("code",[e._v("form")]),e._v(" 也是一个界标角色，但把它用在 "),a("code",[e._v("form")]),e._v(" 元素上就显得很多余（不觉得 "),a("code",[e._v('<form role="form">')]),e._v(" 啰嗦吗？）。")]),a("h2",{attrs:{id:"什么时候角色是多余的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候角色是多余的？","aria-hidden":"true"}},[e._v("#")]),e._v(" 什么时候角色是多余的？")]),a("p",[e._v("这里就变得有点模糊了。我坚持认为 "),a("code",[e._v('<form role="form">')]),e._v(" 是多余的，同时又觉得 "),a("code",[e._v('<main role="main">')]),e._v("（或者可能 "),a("code",[e._v('<div role="main">')]),e._v("）是很好的实践。怎么回事？")]),a("p",[e._v("角色是语义的扩展。它们的任务之一就是为浏览器尚不支持或未完全支持的语义元素保驾护航。")]),a("p",[e._v("可以大胆断言，所有主流的浏览器都知道 "),a("code",[e._v("form")]),e._v(" 元素是什么——元素本身已经暗含了它的角色。然而，这对于 "),a("code",[e._v("main")]),e._v(" 元素就不那么可靠了。目前，要让语义角色对辅助性技术可见，Chrome 和 Firefox _要求_在元素上使用 "),a("code",[e._v('<role="main">')]),e._v("，而 IE _连 "),a("code",[e._v("main")]),e._v(" 是什么都不知道。_因此，"),a("a",{attrs:{href:"http://www.html5accessibility.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("直到广泛采用之前，我们全都要加上 "),a("code",[e._v("role")])]),e._v("。")]),a("p",[e._v("尽管我倾向于不使用 "),a("code",[e._v('<form role="form">')]),e._v("，还是有各种不同的观点（包括 ARIA 的其他方面）。不要把我的看法当作事实。")]),a("h2",{attrs:{id:"下一步？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下一步？","aria-hidden":"true"}},[e._v("#")]),e._v(" 下一步？")]),a("p",[e._v("我前面说过文档寥寥无几。这并非夸大其辞，但一些惊人的努力却并未得到应有的认同。还是有一些非常有用的资源，比如 "),a("a",{attrs:{href:"http://a11yproject.com/checklist.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("a11yproject.com 的可用性备忘录")]),e._v("。这正是 Web 多面手所需的那种应用参考。相比于其他话题，针对 Web 实现者的分析性文档尽管显得很稀缺，然而并非完全缺失。")]),a("p",[e._v("ARIA 和可用性还远不止这些。界标角色是很好的开始，随着理解的逐渐加深，你会认识到其他类型的角色（一共四类，界标是其中之一）以及 "),a("code",[e._v("aria-*")]),e._v(" 前缀的状态和特性属性。")]),a("p",[e._v("我这里所讲的只是一点皮毛。即使你只是随口说会在 HTML 中使用一些 ARIA 界标角色，我也会感到很高兴。")])])}],!1,null,null,null);r.default=o.exports}}]);