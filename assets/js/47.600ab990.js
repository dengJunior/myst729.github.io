(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{58:function(t,s,n){"use strict";n.r(s);var a=n(0),o=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),n("p",[t._v("两个月前我写过一篇"),n("router-link",{attrs:{to:"/posts/2012/clockwise-points-sorting.html"}},[t._v("时钟方向坐标系点排序算法及 JavaScript 实现")]),t._v("。最初的演示只能打印输入输出，实在太简陋，因此我后来加了一个用 canvas 实现的排序结果图。由于这个图是一次生成的，跟我为文章制作的动画 GIF 图（见下图）相比，演示效果显得很一般。考虑到 canvas 可编程的特性，我决定给 demo 中的排序图加上动画，让演示效果更直观有趣。然而跟大多数的 JavaScript 异步编程一样，这个过程让人十分抓狂：为了满足延时的需求，程序原有的结构完全被拆开，分散在各种回调函数中。有没有一种工具可以让我们用同步的方式编写异步代码呢？老赵开发的 "),n("a",{attrs:{href:"http://windjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wind.js")]),t._v(" 就是这样一种工具。本文将尝试使用传统的 "),n("code",[t._v("setTimeout")]),t._v(" 大法和 Wind.js 分别实现给演示加上动画的需求。")],1),t._m(1),t._m(2),t._m(3),n("p",[t._v("在按下“排序”按钮时，下面这行代码将会被执行，从而开始图像的绘制。其中 "),n("code",[t._v("clockwiseSorting")]),t._v(" 是一个点排序的算法，具体内容请阅读"),n("router-link",{attrs:{to:"/posts/2012/clockwise-points-sorting.html"}},[t._v("前文")]),t._v("。")],1),t._m(4),t._m(5),t._m(6),n("p",[t._v("目前常见的一个解决方案，是在每次绘制结束时调用下一次绘制。")]),t._m(7),n("p",[t._v("如果你有回调癖，一定这样也不是不可以啦……")]),t._m(8),n("p",[t._v("怎么样，难看吗？原有代码的逻辑结构整个被拆散了，这大大增加了维护异步编程代码的成本。对于复杂项目的编程，如果同步代码结构有变动，异步代码不可避免要作出调整，糟糕时甚至不得不完全重写。要是能在原有结构不变的基础上实现异步编程，那就太爽了。“接下来，就是见证奇迹的时刻。”我们要用 Wind.js 来爽一把！")]),n("p",[t._v("首先我们要引入 Wind.js 类库。根据官方网站提供的文档，只需要添加一行代码就可以了。")]),t._m(9),t._m(10),t._m(11),t._m(12),t._m(13),t._m(14),t._m(15),n("p",[t._v("从图中可以看到，使用 Wind.js 前后，代码只有几处非常小的改动，完全没有影响原有逻辑结构。相比于代码逻辑被回调函数肢解的传统手法，使用 Wind.js 编写的代码更简洁，易于维护，极大改善了异步编程的体验，解放了深陷回调漩涡的 JavaScript 程序员。")]),t._m(16),n("p",[t._v("附录：文中提到的几个演示")]),t._m(17),t._m(18)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"借助-wind-js-编写更流畅的异步代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借助-wind-js-编写更流畅的异步代码","aria-hidden":"true"}},[this._v("#")]),this._v(" 借助 Wind.js 编写更流畅的异步代码")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://myst729.github.io/blog/images/2012/07/clockwise-points-sorting.gif",alt:"Clockwise Points Sorting"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("先来看看最初没有动画效果的演示代码，其中部分用伪代码代替（如果您对隐去的代码感兴趣，可以在"),s("a",{attrs:{href:"https://github.com/myst729/clockwise-points-sorting/blob/gh-pages/demo1.html",target:"_blank",rel:"noopener noreferrer"}},[this._v("这里")]),this._v("查看完整代码）。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawLine")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制线条 */")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawPoints")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制所有输入的点 */")]),t._v("\n \n    "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" points"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" l"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("drawLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token function"}},[t._v("drawPoints")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("clockwiseSorting")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" basic"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("由于 JavaScript 代码运行非常快，整个绘制过程所耗费的时间短到我们无法感知。如果要实现动画效果，就必须在绘制过程中插入足够长的延时，让它慢下来。现在假设我们想让绘制线条的过程慢一点，比如说，每 400 毫秒画一条线，应该怎么做呢？可以肯定的是我们不能再使用 "),s("code",[this._v("for")]),this._v(" 循环了，因为 "),s("code",[this._v("for")]),this._v(" 循环的每次迭代并不会等待上一次迭代中调用函数的返回。即使我们像下面这样，在循环中加入延时，也无法控制两次迭代之间的时间间隔，所有的线条都会在 400 毫秒后绘制出来。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawPoints")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制所有输入的点 */")]),t._v("\n \n    "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" points"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" l"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("drawLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("400")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawLine")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制线条 */")]),t._v("\n \n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" points"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 如果还有未绘制的线条，则继续下一次绘制")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("drawLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("400")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawPoints")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制所有输入的点 */")]),t._v("\n \n    "),n("span",{attrs:{class:"token function"}},[t._v("drawLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawLine")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制线条 */")]),t._v("\n \n        "),n("span",{attrs:{class:"token keyword"}},[t._v("if")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" points"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("// 如果还有未绘制的线条，则继续下一次绘制")]),t._v("\n            "),n("span",{attrs:{class:"token function"}},[t._v("callback")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("400")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{attrs:{class:"token function-variable function"}},[t._v("drawPoints")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制所有输入的点 */")]),t._v("\n \n    "),n("span",{attrs:{class:"token function"}},[t._v("drawLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" drawLine"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("src")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("wind-all-0.7.1.js"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{attrs:{class:"token script language-javascript"}}),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然后要做的事情，就是按照 Wind.js 的方式编译原先用同步方式编写的 "),s("code",[this._v("drawPoints")]),this._v(" 函数（即需要在 "),s("code",[this._v("for")]),this._v(" 循环中加入延时的函数）。在需要延时的地方（循环中）调用 "),s("code",[this._v("$await")]),this._v("，程序运行到此处时就会暂停，当我们预设的时间过去以后，程序会从暂停中恢复过来，继续执行。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" drawPointsAsync "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("eval")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Wind"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("compile")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'async'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("/* 绘制所有输入的点 */")]),t._v("\n \n    "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("0")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" points"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" l"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{attrs:{class:"token operator"}},[t._v("++")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// 延时 400 毫秒")]),t._v("\n        $"),n("span",{attrs:{class:"token keyword"}},[t._v("await")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Wind"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Async"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("sleep")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("400")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        "),n("span",{attrs:{class:"token function"}},[t._v("drawLine")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后只要调用 "),s("code",[this._v("start")]),this._v(" 方法（千万别忘了哟~），就可以执行编译后的 "),s("code",[this._v("drawPointsAsync")]),this._v(" 函数了。")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token function"}},[t._v("drawPointsAsync")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token function"}},[t._v("clockwiseSorting")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" basic"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("start")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("大功告成，动画已经做好了。那 "),s("code",[this._v("drawLine")]),this._v(" 函数怎么办？什么怎么办？已经完事了，根本不需要改动 "),s("code",[this._v("drawLine")]),this._v(" 函数，神奇吧！到底有多神奇，看看下面这张 git diff 的截图，相信你会更加震惊。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://myst729.github.io/blog/images/2012/09/windjs-git-diff.png",alt:"git diff"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("好了，对 Wind.js 的简单介绍就到这里。更多资料请访问 Wind.js 官方网站 "),s("a",{attrs:{href:"http://windjs.org/",target:"_blank",rel:"noopener noreferrer"}},[this._v("http://windjs.org/")]),this._v(" 及其 "),s("a",{attrs:{href:"https://github.com/JeffreyZhao/wind",target:"_blank",rel:"noopener noreferrer"}},[this._v("GitHub 项目页面")]),this._v("，你还可以在新浪微博上关注 Wind.js 的作者 "),s("a",{attrs:{href:"http://weibo.com/jeffz",target:"_blank",rel:"noopener noreferrer"}},[this._v("@老赵")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("a",{attrs:{href:"https://myst729.github.io/clockwise-points-sorting/demo1.html",target:"_blank",rel:"noopener noreferrer"}},[this._v("没有动画的最初版本")])]),s("li",[s("a",{attrs:{href:"https://myst729.github.io/clockwise-points-sorting/demo2.html",target:"_blank",rel:"noopener noreferrer"}},[this._v("setTimeout 版本")])]),s("li",[s("a",{attrs:{href:"https://myst729.github.io/clockwise-points-sorting/demo3.html",target:"_blank",rel:"noopener noreferrer"}},[this._v("使用 Wind.js 的版本")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("去 GitHub 查看"),s("a",{attrs:{href:"https://github.com/myst729/clockwise-points-sorting",target:"_blank",rel:"noopener noreferrer"}},[this._v("上面几个演示的代码")])])}],!1,null,null,null);s.default=o.exports}}]);